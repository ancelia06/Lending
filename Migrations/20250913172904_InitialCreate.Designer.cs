// <auto-generated />
using System;
using Lending_CapstoneProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lending_CapstoneProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250913172904_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lending_CapstoneProject.Models.LoanApplication", b =>
                {
                    b.Property<int>("LoanApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanApplicationId"));

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApplicationStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("LoanAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LoanOfficerId")
                        .HasColumnType("int");

                    b.Property<int>("LoanSchemeId")
                        .HasColumnType("int");

                    b.Property<int>("LoanType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("RepaymentMethod")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StatusUpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LoanApplicationId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LoanOfficerId");

                    b.HasIndex("LoanSchemeId");

                    b.ToTable("LoanApplications");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.LoanBranch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BranchId");

                    b.ToTable("LoanBranches");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.LoanCompany", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CompanyId");

                    b.ToTable("LoanCompanies");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.LoanScheme", b =>
                {
                    b.Property<int>("LoanSchemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanSchemeId"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal>("InterestRate")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("MinCreditScore")
                        .HasColumnType("int");

                    b.Property<string>("SchemeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("LoanSchemeId");

                    b.HasIndex("CompanyId");

                    b.ToTable("LoanSchemes");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.Repayment", b =>
                {
                    b.Property<int>("RepaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepaymentId"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoanApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("Method")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RepaymentId");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("Repayments");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoanCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasDiscriminator<int>("UserType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.Customer", b =>
                {
                    b.HasBaseType("Lending_CapstoneProject.Models.User");

                    b.Property<string>("AadharId")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("PanId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasIndex("LoanCompanyId");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.LoanAdmin", b =>
                {
                    b.HasBaseType("Lending_CapstoneProject.Models.User");

                    b.Property<string>("AdminRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("LoanCompanyId");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.LoanOfficer", b =>
                {
                    b.HasBaseType("Lending_CapstoneProject.Models.User");

                    b.Property<string>("BranchLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LoanBranchBranchId")
                        .HasColumnType("int");

                    b.HasIndex("LoanBranchBranchId");

                    b.HasIndex("LoanCompanyId");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.SystemAdministrator", b =>
                {
                    b.HasBaseType("Lending_CapstoneProject.Models.User");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("LoanCompanyId");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.LoanApplication", b =>
                {
                    b.HasOne("Lending_CapstoneProject.Models.Customer", "Customer")
                        .WithMany("LoanApplications")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Lending_CapstoneProject.Models.LoanOfficer", "LoanOfficer")
                        .WithMany("AssignedApplications")
                        .HasForeignKey("LoanOfficerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Lending_CapstoneProject.Models.LoanScheme", "LoanScheme")
                        .WithMany()
                        .HasForeignKey("LoanSchemeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("LoanOfficer");

                    b.Navigation("LoanScheme");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.LoanScheme", b =>
                {
                    b.HasOne("Lending_CapstoneProject.Models.LoanCompany", "LoanCompany")
                        .WithMany("LoanSchemes")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanCompany");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.Repayment", b =>
                {
                    b.HasOne("Lending_CapstoneProject.Models.LoanApplication", "LoanApplication")
                        .WithMany("Repayments")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.Customer", b =>
                {
                    b.HasOne("Lending_CapstoneProject.Models.LoanCompany", "LoanCompany")
                        .WithMany()
                        .HasForeignKey("LoanCompanyId");

                    b.Navigation("LoanCompany");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.LoanAdmin", b =>
                {
                    b.HasOne("Lending_CapstoneProject.Models.LoanCompany", "LoanCompany")
                        .WithMany()
                        .HasForeignKey("LoanCompanyId");

                    b.Navigation("LoanCompany");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.LoanOfficer", b =>
                {
                    b.HasOne("Lending_CapstoneProject.Models.LoanBranch", null)
                        .WithMany("Officers")
                        .HasForeignKey("LoanBranchBranchId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Lending_CapstoneProject.Models.LoanCompany", "LoanCompany")
                        .WithMany("LoanOfficers")
                        .HasForeignKey("LoanCompanyId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Users_LoanCompanies_LoanCompanyId1");

                    b.Navigation("LoanCompany");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.SystemAdministrator", b =>
                {
                    b.HasOne("Lending_CapstoneProject.Models.LoanCompany", "LoanCompany")
                        .WithMany()
                        .HasForeignKey("LoanCompanyId");

                    b.Navigation("LoanCompany");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.LoanApplication", b =>
                {
                    b.Navigation("Repayments");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.LoanBranch", b =>
                {
                    b.Navigation("Officers");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.LoanCompany", b =>
                {
                    b.Navigation("LoanOfficers");

                    b.Navigation("LoanSchemes");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.Customer", b =>
                {
                    b.Navigation("LoanApplications");
                });

            modelBuilder.Entity("Lending_CapstoneProject.Models.LoanOfficer", b =>
                {
                    b.Navigation("AssignedApplications");
                });
#pragma warning restore 612, 618
        }
    }
}
